{"version":3,"sources":["components/All_cards/All_cards.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["Dashboard","useState","data","setData","user","setUser","active","setActive","useEffect","getList","fetch","then","result","json","resp","results","makeActive","current","gender","name","address","image","picture","large","title","first","last","toUpperCase","slice","location","street","number","city","state","country","postcode","timezone","offset","description","class","className","src","style","color","textDecoration","map","value","id","onClick","backgroundColor","email","Navbar","href","App","ReactDOM","render","document","getElementById"],"mappings":"yOAoHeA,EAjHG,WAChB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACAC,qBAAU,WACRC,MACC,IAGH,IAAMA,EAAU,WACdC,MACE,kFACAC,MAAK,SAACC,GACNA,EAAOC,OAAOF,MAAK,SAACG,GAClBX,EAAQW,EAAKC,gBAKbC,EAAY,WAChBT,GAAU,SAAAU,GAAO,OAAKA,MAIxB,GAAY,MAARb,EACF,IAAIc,EAAS,OACTC,EAAO,sBACPC,EACF,kFACEC,EAAQ,wDAEZA,EAAQnB,EAAKE,GAAMkB,QAAQC,MAC3BJ,EACEjB,EAAKE,GAAMe,KAAKK,MAChB,IACAtB,EAAKE,GAAMe,KAAKM,MAChB,IACAvB,EAAKE,GAAMe,KAAKO,KAClBR,EAAShB,EAAKE,GAAMc,OAAO,GAAGS,cAAgBzB,EAAKE,GAAMc,OAAOU,MAAM,GACtER,EACElB,EAAKE,GAAMyB,SAASC,OAAOC,OAC3B,KACA7B,EAAKE,GAAMyB,SAASC,OAAOX,KAC3B,KACAjB,EAAKE,GAAMyB,SAASG,KACpB,KACA9B,EAAKE,GAAMyB,SAASI,MACpB,KACA/B,EAAKE,GAAMyB,SAASK,QACpB,KACAhC,EAAKE,GAAMyB,SAASM,SACpB,KACAjC,EAAKE,GAAMyB,SAASO,SAASC,OAC7B,MACAnC,EAAKE,GAAMyB,SAASO,SAASE,YAIjC,OACE,qCAEE,qBAAKC,MAAM,WAAX,SACE,qBAAKA,MAAM,uBAAX,SACE,sBAAKA,MAAM,yBAAX,UACE,qBAAKC,UAAU,aAAf,SACE,qBAAKC,IAAKpB,MAEZ,sBAAKkB,MAAM,aAAX,UACE,oBAAIA,MAAM,aAAaG,MAAO,CAACC,MAAM,MAAMC,eAAe,aAA1D,SAAyEzB,IACzE,4BAAKC,IACL,mBAAGmB,MAAM,QAAT,SAAkBrB,cAO1B,qBAAKqB,MAAM,aAAX,SAGGrC,EAAK2C,KAAI,SAACC,EAAOC,GAChB,OACE,mCACE,qBACEP,UAAU,8BACVQ,QAAS,kBAAM3C,EAAQ0C,IAFzB,SAKE,sBAAKR,MAAM,YAAYG,MAAO,CAACO,gBAAgB3C,EAAO,UAAU,GAAGqC,MAAMrC,EAAO,QAAQ,IACxF0C,QAAShC,EADT,UAGE,oBAAGwB,UAAU,cAAb,UACGtC,EAAK6C,GAAI7B,OAAO,GAAGS,cAAgBzB,EAAK6C,GAAI7B,OAAOU,MAAM,GAD5D,WAIA,qBAAIW,MAAM,aAAV,UACGrC,EAAK6C,GAAI5B,KAAKK,MACb,IACAtB,EAAK6C,GAAI5B,KAAKM,MACd,IACAvB,EAAK6C,GAAI5B,KAAKO,KAAM,OAExB,mBAAGa,MAAM,eAAT,SAAyBrC,EAAK6C,GAAIG,wBChFrCC,G,MAtBA,WACX,OAEM,qBAAKZ,MAAM,6DAAX,SACR,sBAAKA,MAAM,kBAAX,UACE,mBAAGA,MAAM,oBAAoBa,KAAK,IAAlC,4BAEA,qBAAKb,MAAM,YAAX,SAEF,qBAAIA,MAAM,gBAAV,UACE,oBAAIA,MAAM,yBAAV,qBACA,oBAAIA,MAAM,kBAAV,sBACA,oBAAIA,MAAM,mBAAV,iCCImBc,G,MAdX,WAEZ,OAEI,mCACA,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCNNc,IAASC,OAAQ,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.6bbd32f4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./All_cards.css\";\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState([]);\r\n  const [user, setUser] = useState();\r\n  const [active, setActive] = useState(false);\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  // fetching the from api---\r\n  const getList = () => {\r\n    fetch(\r\n      \"https://randomuser.me/api/?inc=gender,name,nat,location,picture,email&results=\"\r\n    ).then((result) => {\r\n      result.json().then((resp) => {\r\n        setData(resp.results);\r\n      });\r\n    });\r\n  };\r\n\r\n  const makeActive= () =>{\r\n    setActive(current => !current)\r\n}\r\n\r\n// here data will be updated after click so checking whether upadated or not-----\r\n  if (user == null) {\r\n    var gender = \"male\";\r\n    var name = \"Mr Herbtert Alvarez\";\r\n    var address =\r\n      \"412, E Pecan St, Hobart, Victoria, Australia, 1447, -12:00, Eniwetok, Kwajalein\";\r\n    var image = \"https://randomuser.me/api/portraits/women/47.jpg\";\r\n  } else {\r\n    image = data[user].picture.large;\r\n    name =\r\n      data[user].name.title +\r\n      \" \" +\r\n      data[user].name.first +\r\n      \" \" +\r\n      data[user].name.last;\r\n    gender = data[user].gender[0].toUpperCase() + data[user].gender.slice(1);\r\n    address =\r\n      data[user].location.street.number +\r\n      \", \" +\r\n      data[user].location.street.name +\r\n      \", \" +\r\n      data[user].location.city +\r\n      \", \" +\r\n      data[user].location.state +\r\n      \", \" +\r\n      data[user].location.country +\r\n      \", \" +\r\n      data[user].location.postcode +\r\n      \", \" +\r\n      data[user].location.timezone.offset +\r\n      \", -\" +\r\n      data[user].location.timezone.description;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* top half section */}\r\n      <div class=\"top_card\">\r\n        <div class=\"card w-75 card_style\">\r\n          <div class=\"card-body card_display\">\r\n            <div className=\"card_image\">\r\n              <img src={image} />\r\n            </div>\r\n            <div class=\"card_right\">\r\n              <h3 class=\"card-title\" style={{color:\"red\",textDecoration:\"underline\"}}>{name}</h3>\r\n              <p >{address}</p>\r\n              <p class=\"light\">{gender}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* bottom half section */}\r\n      <div class=\"all_cards \">\r\n        {/* if api would have been with lots of people data it would render all users itself---- */}\r\n\r\n        {data.map((value, id) => {\r\n          return (\r\n            <>\r\n              <div\r\n                className=\"card card_width my pointer \"\r\n                onClick={() => setUser(id) }\r\n                \r\n                >\r\n                <div class=\"card-body\" style={{backgroundColor:active?\"#A259FF\":\"\",color:active?\"white\":\"\"}}\r\n                onClick={makeActive}\r\n                >\r\n                  <p className=\"card_top my\">\r\n                    {data[id].gender[0].toUpperCase() + data[id].gender.slice(1)} .\r\n                    NL\r\n                  </p>\r\n                  <h4 class=\"card-title\">\r\n                    {data[id].name.title +\r\n                      \" \" +\r\n                      data[id].name.first +\r\n                      \" \" +\r\n                      data[id].name.last}{\" \"}\r\n                  </h4>\r\n                  <p class=\"card-text my\">{data[id].email}</p>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n      \r\n          <nav class=\"navbar navbar-expand-lg navbar-light bg-light navbar_color\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand bold\" href=\"#\">Your Challange</a>\r\n   \r\n    <div class=\"right_nav\" >\r\n\r\n  <ol class=\"breadcrumb my\" >\r\n    <li class=\"mx-left active pointer\">Product</li>\r\n    <li class=\"mx-left pointer\" >Download</li>\r\n    <li class=\" mx-left pointer\" >Pricing</li>\r\n  </ol>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n      \r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport All_cards from './components/All_cards/All_cards';\nimport Navbar from './components/Navbar/Navbar';\nimport './App.css';\n\nconst App = () => {\n\nreturn(\n     \n    <>\n    <div className=\"app\">\n      <Navbar/>\n      <All_cards/>\n    </div>\n\n    </>\n)\n        }\n\n        export default App;\n      \n        \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render( <App/>, document.getElementById('root'));\n"],"sourceRoot":""}